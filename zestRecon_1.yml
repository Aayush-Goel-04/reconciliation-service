zestRecon_1:
  rules :
    fileFormat:
      # Load file if file name start with 'nameFormat'
      # In case of multiple sheets which sheet to load
      Piramal-Bank-File:
        nameFormat: "Piramal-Bank-File"
      Piramal-Recon-File:
        nameFormat: "Piramal-Recon-File"

    validationRules :
      Piramal-Bank-File :
        # Loads only the required columns in dataframe
        # Also checks if required columns are present
        checkColumns :
        - "BENEFICIARY_NAME"
        - "AMOUNT"
      Piramal-Recon-File :
        checkColumns :
        - "MERCHANT_BENE"
        - "CUSTOMER_BENE"
        - "MERCHANT_PAYABLE"
        - "CUSTOMER_PAYABLE"

    transformationRules :
      Piramal-Bank-File :

      Piramal-Recon-File:
        createColumns:
          # Create column AMOUNT = df[MERCHANT_PAYABLE] + df[CUSTOMER_PAYABLE]
          AMOUNT : "MERCHANT_PAYABLE + CUSTOMER_PAYABLE"
          BENEFICIARY_NAME : "concat_ws('', MERCHANT_BENE, CUSTOMER_BENE)"

    mergeRows :
      # *************************  IMPORTANT *****************************
      # Columns with UNIQUE operation should be placed above SUM operation
      Piramal-Bank-File :
        requiredColumns :
          - "BENEFICIARY_NAME"
          - "AMOUNT"
        uniqueColumn_UID : "BENEFICIARY_NAME"
        columnMergeType :
          AMOUNT : "UNIQUE"

      Piramal-Recon-File:
        requiredColumns:
          - "BENEFICIARY_NAME"
          - "AMOUNT"
        uniqueColumn_UID: "BENEFICIARY_NAME"
        columnMergeType :
          AMOUNT : "SUM"

    matchingRules :
      matchCondition: "df1.BENEFICIARY_NAME = df2.BENEFICIARY_NAME AND df1.AMOUNT = df2.AMOUNT"
      # Defines that all rows in file 1 should have a match
      fileMatchType:
        Piramal-Bank-File: "ALL"
        # Defines that some rows in file 2 may or may not have a match
        Piramal-Recon-File: "ALL"
